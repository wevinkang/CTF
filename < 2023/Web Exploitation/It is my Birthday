Started practicing curl command syntax on the command line.

└─$ curl http://mercury.picoctf.net:57247/
"""
                                        <h3>See if you are invited to my party!</h3>
                                </div>
                        </div>
                        <br/>
                        <div class="upload-form">
                                <form role="form" action="/index.php" method="post" enctype="multipart/form-data">
                                <div class="row">
                                        <div class="form-group">
                                                <input type="file" name="file1" id="file1" class="form-control input-lg">
                                                <input type="file" name="file2" id="file2" class="form-control input-lg">
                                        </div>
                                </div>
                                <div class="row">
                                        <div class="col-xs-12 col-sm-12 col-md-12">
                                                <input type="submit" class="btn btn-lg btn-success btn-block" name="submit" value="Upload">
"""

For this challenge, want to first see the behaviour of the file validation for this site.

└─$ curl -F 'file1=@bday.txt' -F 'file2=@bday.txt' -F 'submit=Upload'  http://mercury.picoctf.net:57247/index.php
Not a PDF! 

Let's change the txt file to pdf.
└─$  mv bday.txt bday.pdf

└─$ curl -F 'file1=@bday.pdf' -F 'file2=@bday.pdf' -F 'submit=Upload'  http://mercury.picoctf.net:57247/index.php
Files are not different!

We've fulfilled the pdf check, but now the files are not different. Question is, how does the site validate the files are the same or different? File name, hash, so on and so forth.
Since the challenge discusses a collision, we can likely assume they want two different files with the same hash, that are slightly different.
